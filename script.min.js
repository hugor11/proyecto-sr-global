(function() { 'use strict'; if (!Element.prototype.closest) { Element.prototype.closest = function(s) { var el = this; do { if (el.matches && el.matches(s)) return el; el = el.parentElement || el.parentNode; } while (el !== null && el.nodeType === 1); return null; }; } if (!Element.prototype.matches) { Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector; } function setVHProperty() { try { const vh = window.innerHeight * 0.01; document.documentElement.style.setProperty('--vh', `${vh}px`); } catch (e) { console.warn('Error setting VH property:', e); } } setVHProperty(); window.addEventListener('resize', setVHProperty, { passive: true }); window.addEventListener('orientationchange', function() { setTimeout(setVHProperty, 200); }, { passive: true }); if ('ontouchstart' in window) { document.documentElement.classList.add('touch-device'); } if (window.navigator.userAgent.match(/(iPad|iPhone|iPod)/g)) { document.documentElement.style.webkitOverflowScrolling = 'touch'; } console.log('iOS/Safari polyfills and fixes loaded'); })(); window.__appStarted = window.__appStarted || false; function startApp() { if (window.__appStarted) return; window.__appStarted = true; initFancybox(); initMobileMenu(); addScrollEffects(); initModals(); watchCarouselVisibility(); try { initSwiper(); } catch {} initZohoFormIntegration(); initGAInteractions(); } function safeStartApp() { if (document.readyState !== 'complete' && document.readyState !== 'interactive') { console.log('DOM not ready, waiting...'); return false; } if (typeof document.querySelector !== 'function') { console.warn('Basic DOM methods not available'); return false; } try { startApp(); return true; } catch (e) { console.error('Error starting app:', e); setTimeout(function() { try { startApp(); } catch (e2) { console.error('Second attempt failed:', e2); } }, 1000); return false; } } if (document.readyState === 'loading') { document.addEventListener('DOMContentLoaded', safeStartApp, { once: true }); } else { setTimeout(safeStartApp, 0); } window.addEventListener('load', function() { if (!window.__appStarted) { setTimeout(safeStartApp, 200); } }, { once: true }); setTimeout(function() { if (!window.__appStarted) { console.warn('Forcing app start after timeout'); safeStartApp(); } }, 3000); let promotionsSwiper = null; function initSwiper() { ensurePromotionsSwiper(false); } let __swiperWaitTimer = null; function ensurePromotionsSwiper(forceInit = false) { const container = document.querySelector('#promotions-carousel'); if (typeof window.Swiper === 'undefined') { if (!__swiperWaitTimer) { __swiperWaitTimer = setInterval(() => { if (typeof window.Swiper !== 'undefined') { clearInterval(__swiperWaitTimer); __swiperWaitTimer = null; ensurePromotionsSwiper(true); } }, 150); } return; } if (!container) return; const isVisible = !!(container.offsetParent || container.getClientRects().length); if (!promotionsSwiper) { if (!isVisible && !forceInit) return; try { promotionsSwiper = new Swiper('#promotions-carousel', { slidesPerView: 1, spaceBetween: 20, pagination: { el: '#promotions-carousel .swiper-pagination', clickable: true, }, navigation: { nextEl: '#promotions-carousel .swiper-button-next', prevEl: '#promotions-carousel .swiper-button-prev', }, breakpoints: { 640: { slidesPerView: 2, spaceBetween: 20 }, 1024: { slidesPerView: 3, spaceBetween: 30 }, }, loop: true, autoplay: { delay: 5000, disableOnInteraction: false }, observer: true, observeParents: true, }); setTimeout(() => promotionsSwiper && promotionsSwiper.update(), 100); console.log('‚úÖ Swiper inicializado'); } catch (error) { console.error('‚ùå Error al inicializar Swiper:', error); } } else { try { promotionsSwiper.update(); console.log('üîÑ Swiper actualizado'); } catch {} } } function watchCarouselVisibility() { const container = document.querySelector('#promotions-carousel'); if (!('IntersectionObserver' in window) || !container) return; const obs = new IntersectionObserver((entries) => { entries.forEach((e) => { if (e.isIntersecting) { ensurePromotionsSwiper(true); obs.disconnect(); } }); }, { threshold: 0.1 }); obs.observe(container); } function initFancybox() { if (typeof window.Fancybox === 'undefined') return; try { Fancybox.bind("[data-fancybox]", { animated: true, showClass: "fancybox-zoomIn", hideClass: "fancybox-zoomOut", }); } catch {} } function initZohoFormIntegration() { const iframe = document.getElementById('zoho-form-iframe'); if (!iframe) return; let lastHeight = 1000; const setHeight = (h) => { const height = Math.max(600, Math.min(3000, Number(h) || lastHeight)); lastHeight = height; iframe.style.height = height + 'px'; }; window.addEventListener('message', (event) => { const data = event.data; if (!data || typeof data !== 'object') return; if (data.type === 'zohoForm:resize' && data.height) { setHeight(data.height); } if (data.type === 'zohoForm:submitted') { try { if (typeof gtag === 'function') { gtag('event', 'generate_lead', { method: 'zoho_form', event_category: 'lead', event_label: 'contact_form', value: 1 }); } } catch {} } }); const ping = () => { try { iframe.contentWindow && iframe.contentWindow.postMessage({ type: 'parent:requestHeight' }, '*'); } catch {} }; const interval = setInterval(ping, 1500); const obs = new MutationObserver(() => { if (!document.body.contains(iframe)) { clearInterval(interval); obs.disconnect(); } }); obs.observe(document.body, { childList: true, subtree: true }); } function initGAInteractions() { const send = (name, params) => { try { if (typeof gtag === 'function') gtag('event', name, params || {}); } catch {} }; document.addEventListener('click', (ev) => { const a = ev.target && ev.target.closest ? ev.target.closest('a') : null; if (!a) return; const href = (a.getAttribute('href') || '').trim(); if (!href) return; const page = location.pathname + location.search; const common = { page_path: page, link_url: href }; if (/wa\.me|api\.whatsapp\.com|whatsapp:\/\ send('contact', { method: 'whatsapp', ...common }); return; } if (href.startsWith('mailto:')) { send('contact', { method: 'email', ...common }); return; } if (href.startsWith('tel:')) { send('contact', { method: 'phone', ...common }); return; } const isContactBtn = a.href && a.href.includes("contact.html"); const goesToContact = /contact\.html(\?|#|$)/i.test(href); if (isContactBtn || goesToContact) { send('contact', { method: isContactBtn ? 'contact_button' : 'contact_page_link', ...common }); } }, true); } function switchLanguage(lang) { if (lang !== 'es' && lang !== 'en') { console.warn('Invalid language:', lang); lang = 'es'; } if (window.__lastAppliedLanguage === lang) { applyLangToLinks(lang); updateLanguageSelectorUI(lang); return; } function addScrollEffects() { window.addEventListener('scroll', function() { const navbar = document.getElementById('navbar'); if (window.scrollY > 50) { navbar.classList.add('py-2'); navbar.classList.remove('py-3'); } else { navbar.classList.add('py-3'); navbar.classList.remove('py-2'); } }); const animatedElements = document.querySelectorAll('.destination-circle, .service-card'); const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.style.opacity = '1'; entry.target.style.transform = 'translateY(0)'; observer.unobserve(entry.target); } }); }, { threshold: 0.1 }); animatedElements.forEach(el => { el.style.opacity = '0'; el.style.transform = 'translateY(20px)'; el.style.transition = 'opacity 0.5s ease, transform 0.5s ease'; observer.observe(el); }); } function initModals() { document.querySelectorAll('.open-modal').forEach(button => { button.addEventListener('click', function() { const modalId = this.getAttribute('data-modal'); document.getElementById(modalId).classList.remove('hidden'); document.body.style.overflow = 'hidden'; }); }); document.querySelectorAll('.modal-close').forEach(button => { button.addEventListener('click', function() { this.closest('[id$="-modal"]').classList.add('hidden'); document.body.style.overflow = ''; }); }); document.querySelectorAll('[id$="-modal"]').forEach(modal => { modal.addEventListener('click', function(e) { if (e.target === this) { this.classList.add('hidden'); document.body.style.overflow = ''; } }); }); document.addEventListener('keydown', function(e) { if (e.key === 'Escape') { document.querySelectorAll('[id$="-modal"]').forEach(modal => { if (!modal.classList.contains('hidden')) { modal.classList.add('hidden'); document.body.style.overflow = ''; } }); } }); } function initMobileMenu() { const menuToggle = document.getElementById('menu-toggle'); const mobileMenu = document.getElementById('mobile-menu'); if (!menuToggle || !mobileMenu) { console.warn('Mobile menu elements not found'); return; } console.log('Initializing mobile menu (refactored version)'); let isOpen = false; function openMenu() { isOpen = true; mobileMenu.classList.remove('hidden'); mobileMenu.style.display = 'block'; menuToggle.querySelector('i').className = 'fas fa-times text-2xl'; menuToggle.setAttribute('aria-expanded', 'true'); menuToggle.setAttribute('aria-label', 'Cerrar men√∫'); console.log('Menu opened'); } function closeMenu() { isOpen = false; mobileMenu.classList.add('hidden'); mobileMenu.style.display = 'none'; menuToggle.querySelector('i').className = 'fas fa-bars text-2xl'; menuToggle.setAttribute('aria-expanded', 'false'); menuToggle.setAttribute('aria-label', 'Abrir men√∫'); console.log('Menu closed'); } menuToggle.addEventListener('click', function() { if (isOpen) { closeMenu(); } else { openMenu(); } console.log('Menu toggled, isOpen:', isOpen); }); document.addEventListener('click', function(e) { if (!isOpen) return; const clickedInsideMenu = mobileMenu.contains(e.target); const clickedOnToggle = menuToggle.contains(e.target); if (!clickedInsideMenu && !clickedOnToggle) { closeMenu(); console.log('Menu closed (clicked outside)'); } }); const menuLinks = mobileMenu.querySelectorAll('a'); menuLinks.forEach(link => { link.addEventListener('click', function() { console.log('Menu link clicked, navigating to:', this.href); closeMenu(); }); }); document.addEventListener('keydown', function(e) { if (e.key === 'Escape' && isOpen) { closeMenu(); console.log('Menu closed (ESC key)'); } }); let resizeTimeout; window.addEventListener('resize', function() { clearTimeout(resizeTimeout); resizeTimeout = setTimeout(function() { if (window.innerWidth >= 768 && isOpen) { closeMenu(); console.log('Menu closed (window resized to desktop)'); } }, 100); }); menuToggle.setAttribute('role', 'button'); menuToggle.setAttribute('aria-expanded', 'false'); menuToggle.setAttribute('aria-controls', 'mobile-menu'); menuToggle.setAttribute('aria-label', 'Abrir men√∫'); console.log('Mobile menu initialized successfully (refactored)'); }